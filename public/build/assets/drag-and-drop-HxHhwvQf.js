class u{constructor(e,s,t){this.draggableSelector=e,this.droppableSelector=s,this.draggingElement=null,this.prevDraggingElement=null,this.nextDraggingElements=[],this.offsetX=0,this.offsetY=0,this.originalParentNode=null,this.originalPosition={top:0,left:0},this.target=null,this.onDropCallback=t,this.cssClass={card:"poker-card",dragging:"poker-card--dragging",selected:"poker-card--selected",selectedStack:"poker-card--selected__stack",animating:"poker-card--animating"},this.handleMouseOver=this.handleMouseOver.bind(this),this.handleMouseLeave=this.handleMouseLeave.bind(this),this.handleMouseDown=this.handleMouseDown.bind(this),this.handleMouseMove=this.handleMouseMove.bind(this),this.handleMouseUp=this.handleMouseUp.bind(this),this.init()}init(){this.draggableCards=document.querySelectorAll(this.draggableSelector),this.droppableSlots=document.querySelectorAll(this.droppableSelector),this.attachEventListeners()}attachEventListeners(){this.draggableCards.forEach(e=>{e.addEventListener("mouseover",this.handleMouseOver),e.addEventListener("mouseleave",this.handleMouseLeave),e.addEventListener("mousedown",this.handleMouseDown)})}removeAllEventListeners(){this.draggableCards.forEach(e=>{e.removeEventListener("mouseover",this.handleMouseOver),e.removeEventListener("mouseleave",this.handleMouseLeave),e.removeEventListener("mousedown",this.handleMouseDown)})}handleMouseOver(e){e.target.classList.add(this.cssClass.selected),r.getNextSiblings(e.target,`.${this.cssClass.card}`).forEach(t=>t.classList.add(this.cssClass.selectedStack))}handleMouseLeave(e){e.target.classList.remove(this.cssClass.selected),r.getNextSiblings(e.target,`.${this.cssClass.card}`).forEach(t=>t.classList.remove(this.cssClass.selectedStack))}handleMouseDown(e){e.preventDefault(),this.draggingElement=e.target,this.prevDraggingElement=e.target.previousElementSibling||null,this.draggingElement.classList.remove(this.cssClass.selected),this.nextDraggingElements=r.getNextSiblings(this.draggingElement,`.${this.cssClass.card}`);const s=this.draggingElement.getBoundingClientRect();this.offsetX=e.clientX-s.left,this.offsetY=e.clientY-s.top,this.originalParentNode=this.draggingElement.parentNode,this.originalPosition={top:s.top,left:s.left},this.draggingElement.classList.add(this.cssClass.dragging),this.nextDraggingElements.forEach(t=>t.classList.add(this.cssClass.dragging,this.cssClass.selectedStack)),r.fixCardPosition(this.draggingElement,e,this.offsetX,this.offsetY),r.fixStackedCardsPosition(this.nextDraggingElements,e,this.offsetX,this.offsetY),e.target.removeEventListener("mouseover",this.handleMouseOver),e.target.removeEventListener("mouseleave",this.handleMouseLeave),this.nextDraggingElements.forEach(t=>{t.removeEventListener("mouseover",this.handleMouseOver),t.removeEventListener("mouseleave",this.handleMouseLeave),t.removeEventListener("mousedown",this.handleMouseDown)}),document.addEventListener("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp)}handleMouseMove(e){this.draggingElement&&(r.fixCardPosition(this.draggingElement,e,this.offsetX,this.offsetY),r.fixStackedCardsPosition(this.nextDraggingElements,e,this.offsetX,this.offsetY),this.checkCollision())}async handleMouseUp(e){if(document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp),this.draggingElement){this.nextDraggingElements.unshift(this.draggingElement);const s=this.nextDraggingElements,t=this.originalPosition,i=this.originalParentNode;if(!this.target){await this.resetDraggedCards(s,t,i);return}const a=this.target,n=this.prevDraggingElement,l=this.droppableSlots;if(this.onDropCallback&&typeof this.onDropCallback=="function"){const d={nextDraggingElements:s,target:a};this.onDropCallback(d,o=>{if(!o){this.resetDraggedCards(s,t,i);return}this.updateDraggingCardsToTargetPosition(a,s,n,l)})}this.reset()}}async resetDraggedCards(e,s,t){await r.moveElementsTo(e,s),e.forEach(i=>{i.classList.remove("poker-card--selected","poker-card--selected__stack"),i.removeAttribute("style"),i.setAttribute("drop-item","true"),t.appendChild(i)}),this.reset()}async updateDraggingCardsToTargetPosition(e,s,t,i){let a=e.getAttribute("card-index")||0,n=parseInt(a);const l=e.getBoundingClientRect(),d={top:l.top+20,left:l.left};await r.moveElementsTo(s,d),s.forEach((o,c)=>{o.classList.remove("poker-card--selected","poker-card--selected__stack");const g=o.getAttribute("card-index");o.classList.remove("card-index-"+g),o.classList.remove(this.cssClass.dragging),o.removeAttribute("style"),e.parentNode.appendChild(o),o.classList.add("card-index-"+ ++n),o.setAttribute("card-index",n),o.setAttribute("card-deck",e.parentNode.getAttribute("card-deck")),c+1===s.length&&o.setAttribute("drop-item","true")}),e.removeAttribute("drop-item"),t&&t.setAttribute("drop-item","true"),i.forEach(o=>o.classList.remove(this.cssClass.selected))}checkCollision(){if(!this.draggingElement)return;const e=this.draggingElement.getBoundingClientRect();let s=null,t=1/0;this.droppableSlots=document.querySelectorAll(this.droppableSelector),this.droppableSlots.forEach(i=>{if(i!==this.draggingElement&&i.hasAttribute("drop-item")){const a=i.getBoundingClientRect();if(e.left<a.right&&e.right>a.left&&e.top<a.bottom&&e.bottom>a.top){const n=r.calculateDistance(e,a);n<t&&(t=n,s=i)}}}),this.droppableSlots.forEach(i=>i.classList.remove(this.cssClass.selected)),s?(s.classList.add(this.cssClass.selected),this.target=s):this.target=null}reset(){this.draggingElement=null,this.prevDraggingElement=null,this.nextDraggingElements=[],this.offsetX=0,this.offsetY=0,this.originalParentNode=null,this.originalPosition={top:0,left:0},this.target=null,this.removeAllEventListeners(),this.init()}}class r{static getNextSiblings(e,s){let t=[];for(;e=e.nextSibling;)e.matches&&e.matches(s)&&t.push(e);return t}static fixCardPosition(e,s,t,i){e.style.position="fixed",e.style.left=`${s.clientX-t}px`,e.style.top=`${s.clientY-i}px`,e.style.zIndex="1",e.removeAttribute("drop-item")}static fixStackedCardsPosition(e,s,t,i){e.forEach((a,n)=>{a.style.position="fixed",a.style.left=`${s.clientX-t}px`,a.style.top=`${s.clientY-i+(n+1)*20}px`,a.style.zIndex=(n+1).toString(),a.removeAttribute("drop-item")})}static calculateDistance(e,s){const t={x:e.left+e.width/2,y:e.top+e.height/2},i={x:s.left+s.width/2,y:s.top+s.height/2};return Math.sqrt(Math.pow(t.x-i.x,2)+Math.pow(t.y-i.y,2))}static async moveElementsTo(e,s){e.forEach((t,i)=>{const a=s.top+20*i;t.style.top=`${a}px`,t.style.left=`${s.left}px`,t.classList.add("poker-card--animating"),t.classList.remove("poker-card--dragging"),t.classList.remove("poker-card--selected"),t.classList.remove("poker-card--selected__stack")}),await new Promise(t=>setTimeout(t,100)),e.forEach(t=>t.classList.remove("poker-card--animating"))}}window.DragAndDrop=u;
